apiVersion: phenix.sandia.gov/v1
kind: Image
metadata:
    name: PHENIX-packetbeat
spec:
    components:
        - main
        - restricted
        - universe
        - multiverse
    compress: true
    format: qcow2
    mirror: http://us.archive.ubuntu.com/ubuntu
    name: PHENIX-packetbeat
    no_virtuals: false
    overlays: null
    packages:
        - gpg
        - curl
        - ethtool
        - ncat
        - net-tools
        - openssh-server
        - rsync
        - ssh
        - tcpdump
        - tmux
        - vim
        - wget
        - linux-image-generic
        - linux-headers-generic
    ramdisk: false
    release: jammy
    script_order:
        - POSTBUILD_APT_CLEANUP
        - POSTBUILD_NO_ROOT_PASSWD
        - POSTBUILD_PHENIX_HOSTNAME
        - POSTBUILD_PHENIX_BASE
        - PACKETBEAT
    scripts:
        PACKETBEAT: |
            ##############################################################################
            # INSTALLS:
            #   [ Packetbeat ]
            #     - Real-time network packet analyzer that you can use with Elasticsearch
            #       to provide an application monitoring and performance analytics system
            #     - https://www.elastic.co/beats/packetbeat
            #
            # REQUIRES:
            #   [ Packages ]
            #     - gpg
            ##############################################################################
            # ------------------------------------------------- Packetbeat ---------------------------------------------------
            curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | gpg --dearmor -o /usr/share/keyrings/elastic.gpg
            echo "deb [signed-by=/usr/share/keyrings/elastic.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main" | tee -a /etc/apt/sources.list.d/elastic-8.x.list
            apt-get update
            apt-get install -y packetbeat
            systemctl enable packetbeat
        POSTBUILD_APT_CLEANUP: |
            # --------------------------------------------------- Cleanup ----------------------------------------------------
            apt clean || apt-get clean || echo "unable to clean apt cache"
        POSTBUILD_NO_ROOT_PASSWD: |
            # ---------------------------------------------- No Root Password ------------------------------------------------
            sed -i 's/nullok_secure/nullok/' /etc/pam.d/common-auth
            sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
            sed -i 's/#PermitEmptyPasswords no/PermitEmptyPasswords yes/' /etc/ssh/sshd_config
            sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
            sed -i 's/PermitEmptyPasswords no/PermitEmptyPasswords yes/' /etc/ssh/sshd_config
            passwd -d root
        POSTBUILD_PHENIX_BASE: |
            # ----------------------------------------------------- Base -----------------------------------------------------
            cat > /etc/systemd/system/miniccc.service <<EOF
            [Unit]
            Description=miniccc
            [Service]
            ExecStart=/opt/minimega/bin/miniccc -v=false -serial /dev/virtio-ports/cc -logfile /var/log/miniccc.log
            [Install]
            WantedBy=multi-user.target
            EOF
            cat > /etc/systemd/system/phenix.service <<EOF
            [Unit]
            Description=phenix startup service
            After=network.target systemd-hostnamed.service
            [Service]
            Environment=LD_LIBRARY_PATH=/usr/local/lib
            ExecStart=/usr/local/bin/phenix-start.sh
            RemainAfterExit=true
            StandardOutput=journal
            Type=oneshot
            [Install]
            WantedBy=multi-user.target
            EOF
            mkdir -p /etc/systemd/system/multi-user.target.wants
            ln -s /etc/systemd/system/miniccc.service /etc/systemd/system/multi-user.target.wants/miniccc.service
            ln -s /etc/systemd/system/phenix.service /etc/systemd/system/multi-user.target.wants/phenix.service
            mkdir -p /usr/local/bin
            cat > /usr/local/bin/phenix-start.sh <<EOF
            #!/bin/bash
            for file in /etc/phenix/startup/*; do
                echo \$file
                bash \$file
            done
            EOF
            chmod +x /usr/local/bin/phenix-start.sh
            mkdir -p /etc/phenix/startup
        POSTBUILD_PHENIX_HOSTNAME: |
            # -------------------------------------------------- Hostname ----------------------------------------------------
            echo "phenix" > /etc/hostname
            sed -i 's/127.0.1.1 .*/127.0.1.1 phenix/' /etc/hosts
            cat > /etc/motd <<EOF

            ██████╗ ██╗  ██╗███████╗███╗  ██╗██╗██╗  ██╗
            ██╔══██╗██║  ██║██╔════╝████╗ ██║██║╚██╗██╔╝
            ██████╔╝███████║█████╗  ██╔██╗██║██║ ╚███╔╝
            ██╔═══╝ ██╔══██║██╔══╝  ██║╚████║██║ ██╔██╗
            ██║     ██║  ██║███████╗██║ ╚███║██║██╔╝╚██╗
            ╚═╝     ╚═╝  ╚═╝╚══════╝╚═╝  ╚══╝╚═╝╚═╝  ╚═╝

            EOF
            echo "\nBuilt with phenix image on $(date)\n\n" >> /etc/motd
    size: 10G
    skip_default_packages: false
    variant: minbase

